<!DOCTYPE html> <!-*- html -*-->
define(__timestamp, 2008-01-04T23:47:28Z)dnl
define(__title, `in which a number of tools factor')dnl
define(__id, 108)dnl
include(header.html)
<p>Today's post is going to consist of a roundup of a bunch of small tools that may not deserve their own post but are still quite useful in their own way with a short bonus round at the end for a micro-project I cooked up yesterday. Perhaps I'll throw in a preview of another in-progress project if I don't forget by the time I'm done writing this post.</p>
<p>To start with: any self-respecting prog'er needs to bind keystrokes to execute commands. [<a href='#fn108'>1</a>] The truly hardcore can simply bind keys within Emacs with the <code>global-set-key</code> function and leave it at that. The rest of us, however, must venture outside the warm embrace of Emacs from time to time and would understandably be irked to find our carefully-bound key strokes void of bindings. Are we then doomed to set up bindings in our window managers that will not outlast our committment to that WM? Are we not to know the peace of mind that comes with storing all such settings in text files under revision control?</p>
<p>The answer to the above questions will already be guessed by the astute reader as 'no'. The solution to the problem raised above is <a href='http://hocwp.free.fr/xbindkeys'>xbindkeys</a>, a small yet indispensable utility for binding keystrokes to commands. As a small bonus it embeds the GNU Guile Scheme interpreter, so configuration may be written in that most blissful of formats, the S-expression.</p>
<p>Something else I use every day but don't interact with much directly is <a href='http://musicpd.org'>mpd</a>, the Music Player D&aelig;mon. Music players traditionally fall into either the multi-window playlist-management style popularized by Winamp and XMMS or the Soundjam-inspired full-library style. <kbd>mpd</kbd> takes a third approach: it deals only with the cataloging and playing of music, leaving the user-interface up to a number of third-party <a href='http://musicpd.org/clients'>clients</a>. This makes it trivial to remotely control your music without resorting to hacks like VNC or X-forwarding. There are your regular Ryhthmbox-style GTK GUIs to it, but Web frontends and the <kbd>mpc</kbd> command-line client are both quite easy to set up and use. It's also trivial to tie <kbd>mpc</kbd> into other tools as mentioned below.</p>
<p>Another small tool that I've recently come to appreciate is <a href='http://www.suckless.org/wiki/tools/xlib'>dmenu</a>. I find this overlooked tool indispensible in another facet of the venerable art of providing Emacs' functionality outside Emacs&mdash;specifically <code>ido-mode</code>'s autocompleting matcher. <kbd>dmenu</kbd> was originally written to work with the plan9-inspired <a href='http://redhanded.hobix.com/inspect/aFewWmii3Hacks.html'>wmii</a> window manager popularized in the Ruby community by Mauricion Fernandez and _why the lucky stiff, but in true UNIX^H^H^H^Hplan9 fashion is totally usable on its own.</p>
<p>The basic idea is that you pipe it a list of many options and it narrows the list of options as you type, providing instant feedback. wmii uses it to great effect as a launcher, but I've found it most useful as a minimalist instant-feedback <a href='http://git.caboo.se/?p=technomancy.git;a=blob;f=bin/mpc-choose'>frontend to mpd</a>. But the program launcher from wmii is <a href='http://git.caboo.se/?p=technomancy.git;a=blob;f=bin/dlaunch.rb'>easily ported</a>.</p>
<p>Lastly, <a href='http://p.hagelb.org'>SCPaste</a> is a tool that I envisioned as I was falling asleep earlier this week. I implemented it mostly on the bus the next day. The idea is to reimplement services such as <a href='http://paste.lisp.org'>lisppaste</a> or <a href='http://rafb.net'>rafb</a>, but instead of creating its own interface for creating new posts and syntax-highlighting, it leverages existing solutions: <kbd>scp</kbd> and GNU Emacs' <code>font-lock</code>. It simply makes two assumptions: you have an SSH account on a publicly-accessible HTTP server, and you're going to paste things that Emacs already knows how to highlight. Given these entirely reasonable constraints, a paste service ends up being about sixty lines of code.</p>
<p>Oh, I almost forgot the sneak preview: <a href='http://github.com/technomancy/rdoc_texinfo/tree/master'>behold RDoc Texinfo</a>. Soon you will no longer have to deal with the silliness of Ruby having its own reimplementation of <kbd>man</kbd> and <kbd>info</kbd> but will be able to read your documentation from the comfort of your fast, hyperlinked Info reader. Stay tuned!</p>
<hr />
<div class="footnotes"><p>[<a name='fn108'>1</a>] - This does not hold for people (I'm told they exist) who use the mouse for absolutely everything. These people, however, may only rarely qualify as &quot;self-respecting prog'ers&quot;.</p></div>

include(footer.html)
