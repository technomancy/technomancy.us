dnl -*- html -*-
define(__timestamp, Sat Oct 13 00:00:01 -0700 2007)dnl
define(__title, `hiker dot rb')dnl
define(__id, 92)dnl
include(header.html)
<p>I <a href='/88'>mentioned before</a> that I have some code for mapping geotagged photos on Google Maps. I've gotten a chance to wrap that up and polish it for release. May I present:  <kbd>hiker.rb</kbd>. Thanks to a tip from an <a href='/88#c'>anonymous commenter</a> my code now creates detail bubbles that include the photo rather than just a link to it. You can see <a href='http://maps.google.com/?q=http://hagelb.org/victoria2.kml'>a couple</a> <a href='http://maps.google.com/?q=http://hagelb.org/edwards3.kml'>examples of it</a>. </p> <p>Unfortunately the process of going from a set of photos and a GPS tracks file to a KML file (which is what Google Maps reads) is somewhat involved. First there's the fact that no mainstream GPS manufacturer uses a sane format. You need a program called <a href='http://www.gpsbabel.org'>gpsbabel</a> to do the conversion into the <a href='http://www.topografix.com/gpx.asp'>GPX</a> format. Say you've got a saved GPS tracks from Magellan GPS that you took on your hike called myhike.log and your photos from the hike in a directory called hike_photos.</p> <pre class='code'> $ gpsbabel -i magellan -o gpx myhike.log myhike.gpx </pre> <p>Once you've got the GPX file,  you can use <a href='http://freefoote.dview.net/linux_gpscorr.html'>gpscorrelate </a>to write the coordinate metadata onto the photo files. This program uses the GPX file to figure out where you were at a given time and then for each photo makes a best guess that it writes to the photo file.</p> <pre class='code'> $ gpscorrelate -g myhike.gpx hike_photos/* </pre> <p>The one caveat at this point is that often your GPS device and your camera will be set to different time zones. If this is the case,  simply add a <kbd>--timeadd +8</kbd> to add 8 hours or adjust accordingly.</p> <p>At this point you'll have to upload the photos to Flickr. Note that if you've already got the photos in Flickr but they don't have the coordinate metadata you'll have to re-upload them. Be sure they are tagged with something unique; you'll use Flickr tags to tell hiker.rb which to process. The last bit of setup you need is to sign up for a <a href='http://www.flickr.com/services/api/keys/apply/'>Flickr API key</a>. Place the key in a file in <kbd>~/.flickr_key</kbd>.</p> <p>Now you're ready to run the script.</p> <pre class='code'> $ ruby hiker.rb myhiketag myusername > myhike.kml </pre> <p>So now you've got your shiny new hike KML file. Publish it to the web and you'll be able to view it in Google Maps by appending its URL to the Google Maps URL: <a href='http://maps.google.com/?q=http://hagelb.org/edwards.kml'>http://maps.google.com/?q=http://example.com/myhike.kml</a></p> <p>Grab <a href='http://dev.technomancy.us/browser/hiker'>the code from my repository</a>.</p> <pre class='code'> $ git svn clone svn: //dev.technomancy.us/hiker </pre> <p>Or if you're still doing the centralized VC thing: </p> <pre class='code'> $ svn co svn: //dev.technomancy.us/hiker </pre> <p>That's all! Future revisions may automate the tiresome work of running <kbd>gpsbabel</kbd> and <kbd>gpscorrelate</kbd>,  but this is how it works for now. Let me know if you run the script and have any feedback; please leave a comment.</p> 
include(footer.html)
